#!/usr/bin/env bash

CONTEXT=${1-k3d-tns}
BASEDIR="$(cd "`dirname $0`"; pwd)"
PROD="$BASEDIR/production/sample"

function install_env {
    echo "installing ${1}"
    ENV=$1
    tk env add environments/$ENV --server-from-context $CONTEXT --namespace $ENV # Creates/configures the environment.
    ln -sf "$PROD/$ENV/main.jsonnet" environments/$ENV/main.jsonnet # Copies the base configuration for your env.
    tk apply environments/$ENV                                      # Installs everything for your environment.
}

if [[ $(docker info --format "{{.MemTotal}}") -lt 2560000000 ]]; then
  echo "WARNING: your docker daemon will likely need more memory in order to schedule all required pods"
fi

if [ -e "$BASEDIR/tanka" ]; then
  echo "tanka/ directory already exists. Please remove and try again."
  exit 1
fi

if ! kubectl --context $CONTEXT get ns>/dev/null 2>&1; then
  echo "$CONTEXT is not a valid KUBECONFIG context. Please check and try again."
  exit 2
fi

mkdir "$BASEDIR/tanka" && cd "$BASEDIR/tanka"

# Initialise Tanka
tk init --k8s=1.22

# Copy dependency list into workdir
cp "$PROD"/jsonnetfile.* .

# Install dependencies
jb install

# Install apps into separate namespaces
install_env loki    # Install loki logging app
install_env tns     # Install TNS demo app
install_env tempo   # Install tempo tracing app
install_env default # Install default monitoring stack

